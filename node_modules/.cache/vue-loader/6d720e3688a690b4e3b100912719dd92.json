{"remainingRequest":"/Users/gustavoreis/faceRecognition-Vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gustavoreis/faceRecognition-Vuejs/src/components/Main.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/gustavoreis/faceRecognition-Vuejs/src/components/Main.vue","mtime":1706315704350},{"path":"/Users/gustavoreis/faceRecognition-Vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1706315721178},{"path":"/Users/gustavoreis/faceRecognition-Vuejs/node_modules/babel-loader/lib/index.js","mtime":1706315721567},{"path":"/Users/gustavoreis/faceRecognition-Vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1706315721178},{"path":"/Users/gustavoreis/faceRecognition-Vuejs/node_modules/vue-loader/lib/index.js","mtime":1706315721622}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTWFpbicsCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmFjZUNsYXNzOiBudWxsLAogICAgICBleWVDbGFzczogbnVsbCwKICAgICAgZmlsZXM6IFtdLAogICAgICB2aWRlb1N0cmVhbTogbnVsbCwKICAgICAgcGVvcGxlQ291bnQ6IDAKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICBsZXQgY2FzY2FkZUZpbGUgPSAnaGFhcmNhc2NhZGVfZnJvbnRhbGZhY2VfZGVmYXVsdC54bWwnCiAgICB0aGlzLmNyZWF0ZUZpbGVGcm9tVVJMKGNhc2NhZGVGaWxlLCBjYXNjYWRlRmlsZSwgKGZhY2UpID0+IHsgdGhpcy5mYWNlQ2xhc3MgPSBmYWNlIH0pCiAgICBjYXNjYWRlRmlsZSA9ICdoYWFyY2FzY2FkZV9leWUueG1sJwogICAgdGhpcy5jcmVhdGVGaWxlRnJvbVVSTChjYXNjYWRlRmlsZSwgY2FzY2FkZUZpbGUsIChleWUpID0+IHsgdGhpcy5leWVDbGFzcyA9IGV5ZSB9KQogIH0sCiAgbWV0aG9kczogewogICAgc3RhcnRDYW1lcmEoKSB7CiAgICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsgdmlkZW86IHRydWUgfSkKICAgICAgICAudGhlbihzdHJlYW0gPT4gewogICAgICAgICAgdGhpcy4kcmVmcy52aWRlby5zcmNPYmplY3QgPSBzdHJlYW07CiAgICAgICAgICB0aGlzLnZpZGVvU3RyZWFtID0gc3RyZWFtOwogICAgICAgICAgdGhpcy4kcmVmcy52aWRlby5wbGF5KCk7CiAgICAgICAgICB0aGlzLmRldGVjdEZhY2UoKTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaChlcnIgPT4gewogICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgYWNjZXNzaW5nIGNhbWVyYTonLCBlcnIpOwogICAgICAgIH0pOwogICAgfSwKICAgIHN0b3BDYW1lcmEoKSB7CiAgICAgIGlmICh0aGlzLnZpZGVvU3RyZWFtKSB7CiAgICAgICAgdGhpcy52aWRlb1N0cmVhbS5nZXRUcmFja3MoKS5mb3JFYWNoKHRyYWNrID0+IHsKICAgICAgICAgIHRyYWNrLnN0b3AoKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGRldGVjdEZhY2UoKSB7CiAgICAgIGxldCB2aWRlbyA9IHRoaXMuJHJlZnMudmlkZW87CiAgICAgIGxldCBjYW52YXMgPSB0aGlzLiRyZWZzLmNhbnZhczsKICAgICAgbGV0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpOwoKICAgICAgY29uc3QgZHJhd0ZyYW1lID0gKCkgPT4gewogICAgICAgIGN0eC5kcmF3SW1hZ2UodmlkZW8sIDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7CiAgICAgICAgbGV0IHNyY01hdCA9IHRoaXMuJGN2LmltcmVhZChjYW52YXMpOwogICAgICAgIGxldCBncmF5ID0gbmV3IHRoaXMuJGN2Lk1hdCgpOwogICAgICAgIHRoaXMuJGN2LmN2dENvbG9yKHNyY01hdCwgZ3JheSwgdGhpcy4kY3YuQ09MT1JfUkdCQTJHUkFZKTsKICAgICAgICBsZXQgZmFjZXMgPSBuZXcgdGhpcy4kY3YuUmVjdFZlY3RvcigpOwogICAgICAgIGxldCBleWVzID0gbmV3IHRoaXMuJGN2LlJlY3RWZWN0b3IoKTsKICAgICAgICB0aGlzLmZhY2VDbGFzcy5kZXRlY3RNdWx0aVNjYWxlKGdyYXksIGZhY2VzKTsKICAgICAgICB0aGlzLnBlb3BsZUNvdW50ID0gZmFjZXMuc2l6ZSgpOwogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmFjZXMuc2l6ZSgpOyBpKyspIHsKICAgICAgICAgIGxldCByb2lHcmF5ID0gZ3JheS5yb2koZmFjZXMuZ2V0KGkpKTsKICAgICAgICAgIGxldCByb2lTcmMgPSBzcmNNYXQucm9pKGZhY2VzLmdldChpKSk7CiAgICAgICAgICBsZXQgcG9pbnQxID0gbmV3IHRoaXMuJGN2LlBvaW50KGZhY2VzLmdldChpKS54LCBmYWNlcy5nZXQoaSkueSk7CiAgICAgICAgICBsZXQgcG9pbnQyID0gbmV3IHRoaXMuJGN2LlBvaW50KGZhY2VzLmdldChpKS54ICsgZmFjZXMuZ2V0KGkpLndpZHRoLCBmYWNlcy5nZXQoaSkueSArIGZhY2VzLmdldChpKS5oZWlnaHQpOwogICAgICAgICAgdGhpcy4kY3YucmVjdGFuZ2xlKHNyY01hdCwgcG9pbnQxLCBwb2ludDIsIFsyNTUsIDAsIDAsIDI1NV0pOwogICAgICAgICAgdGhpcy5leWVDbGFzcy5kZXRlY3RNdWx0aVNjYWxlKHJvaUdyYXksIGV5ZXMpOwogICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBleWVzLnNpemUoKTsgaisrKSB7CiAgICAgICAgICAgIGxldCBwb2ludDEgPSBuZXcgdGhpcy4kY3YuUG9pbnQoZXllcy5nZXQoaikueCwgZXllcy5nZXQoaikueSk7CiAgICAgICAgICAgIGxldCBwb2ludDIgPSBuZXcgdGhpcy4kY3YuUG9pbnQoZXllcy5nZXQoaikueCArIGV5ZXMuZ2V0KGopLndpZHRoLCBleWVzLmdldChqKS55ICsgZXllcy5nZXQoaikuaGVpZ2h0KTsKICAgICAgICAgICAgdGhpcy4kY3YucmVjdGFuZ2xlKHJvaVNyYywgcG9pbnQxLCBwb2ludDIsIFswLCAyNTUsIDAsIDI1NV0pOwogICAgICAgICAgfQogICAgICAgICAgcm9pR3JheS5kZWxldGUoKTsKICAgICAgICAgIHJvaVNyYy5kZWxldGUoKTsKICAgICAgICB9CiAgICAgICAgdGhpcy4kY3YuaW1zaG93KGNhbnZhcywgc3JjTWF0KTsKICAgICAgICBzcmNNYXQuZGVsZXRlKCk7CiAgICAgICAgZ3JheS5kZWxldGUoKTsKICAgICAgICBmYWNlcy5kZWxldGUoKTsKICAgICAgICBleWVzLmRlbGV0ZSgpOwogICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShkcmF3RnJhbWUpOwogICAgICB9OwoKICAgICAgZHJhd0ZyYW1lKCk7CiAgICB9LAogICAgY3JlYXRlRmlsZUZyb21VUkwoZmlsZSwgdXJsLCBjYikgewogICAgICBheGlvcy5nZXQoJy9tb2RlbHMvaGFhcmNhc2NhZGVzLycgKyB1cmwpCiAgICAgICAgLnRoZW4oKHJlc3ApID0+IHsKICAgICAgICAgIGxldCBydG4gPSB0aGlzLiRjdi5GU19jcmVhdGVEYXRhRmlsZSgnLycsIGZpbGUsIHJlc3AuZGF0YSwgdHJ1ZSwgZmFsc2UsIGZhbHNlKQogICAgICAgICAgaWYgKCFydG4pIHJldHVybiBjYihudWxsKQogICAgICAgICAgbGV0IGNsYXNzaWZpZXIgPSBuZXcgdGhpcy4kY3YuQ2FzY2FkZUNsYXNzaWZpZXIoKQogICAgICAgICAgcnRuID0gY2xhc3NpZmllci5sb2FkKGZpbGUpCiAgICAgICAgICBpZiAoIXJ0bikgcmV0dXJuIGNiKG51bGwpCgogICAgICAgICAgY2IoY2xhc3NpZmllcikKICAgICAgICAgIGNvbnNvbGUubG9nKCdsb2FkZWQnLCBydG4sIGNsYXNzaWZpZXIuZW1wdHkoKSwgdGhpcy5mYWNlQ2xhc3MpCgogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdFUlInLCBlcnIpOwogICAgICAgIH0pCiAgICB9CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy5zdG9wQ2FtZXJhKCk7CiAgfQp9Cg=="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";AAmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <div>\n      <video ref=\"video\" width=\"400\" height=\"300\" autoplay></video>\n      <button @click=\"startCamera\">Start Camera</button>\n      <button @click=\"stopCamera\">Stop Camera</button>\n      <p>PEOPLE COUNT: {{ peopleCount }}</p>\n    </div>\n    <!-- Removendo a segunda seção de câmera -->\n    <!-- <div>\n      <canvas id=\"srcimg\" ref=\"srcimg\" class=\"imgcanvas\"></canvas>\n      <canvas id=\"dstimg\" ref=\"dstimg\" class=\"imgcanvas\"></canvas>\n    </div> -->\n    <canvas id=\"canvas\" ref=\"canvas\" class=\"imgcanvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'Main',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      faceClass: null,\n      eyeClass: null,\n      files: [],\n      videoStream: null,\n      peopleCount: 0\n    }\n  },\n  created() {\n    let cascadeFile = 'haarcascade_frontalface_default.xml'\n    this.createFileFromURL(cascadeFile, cascadeFile, (face) => { this.faceClass = face })\n    cascadeFile = 'haarcascade_eye.xml'\n    this.createFileFromURL(cascadeFile, cascadeFile, (eye) => { this.eyeClass = eye })\n  },\n  methods: {\n    startCamera() {\n      navigator.mediaDevices.getUserMedia({ video: true })\n        .then(stream => {\n          this.$refs.video.srcObject = stream;\n          this.videoStream = stream;\n          this.$refs.video.play();\n          this.detectFace();\n        })\n        .catch(err => {\n          console.error('Error accessing camera:', err);\n        });\n    },\n    stopCamera() {\n      if (this.videoStream) {\n        this.videoStream.getTracks().forEach(track => {\n          track.stop();\n        });\n      }\n    },\n    detectFace() {\n      let video = this.$refs.video;\n      let canvas = this.$refs.canvas;\n      let ctx = canvas.getContext('2d');\n\n      const drawFrame = () => {\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        let srcMat = this.$cv.imread(canvas);\n        let gray = new this.$cv.Mat();\n        this.$cv.cvtColor(srcMat, gray, this.$cv.COLOR_RGBA2GRAY);\n        let faces = new this.$cv.RectVector();\n        let eyes = new this.$cv.RectVector();\n        this.faceClass.detectMultiScale(gray, faces);\n        this.peopleCount = faces.size();\n        for (let i = 0; i < faces.size(); i++) {\n          let roiGray = gray.roi(faces.get(i));\n          let roiSrc = srcMat.roi(faces.get(i));\n          let point1 = new this.$cv.Point(faces.get(i).x, faces.get(i).y);\n          let point2 = new this.$cv.Point(faces.get(i).x + faces.get(i).width, faces.get(i).y + faces.get(i).height);\n          this.$cv.rectangle(srcMat, point1, point2, [255, 0, 0, 255]);\n          this.eyeClass.detectMultiScale(roiGray, eyes);\n          for (let j = 0; j < eyes.size(); j++) {\n            let point1 = new this.$cv.Point(eyes.get(j).x, eyes.get(j).y);\n            let point2 = new this.$cv.Point(eyes.get(j).x + eyes.get(j).width, eyes.get(j).y + eyes.get(j).height);\n            this.$cv.rectangle(roiSrc, point1, point2, [0, 255, 0, 255]);\n          }\n          roiGray.delete();\n          roiSrc.delete();\n        }\n        this.$cv.imshow(canvas, srcMat);\n        srcMat.delete();\n        gray.delete();\n        faces.delete();\n        eyes.delete();\n        requestAnimationFrame(drawFrame);\n      };\n\n      drawFrame();\n    },\n    createFileFromURL(file, url, cb) {\n      axios.get('/models/haarcascades/' + url)\n        .then((resp) => {\n          let rtn = this.$cv.FS_createDataFile('/', file, resp.data, true, false, false)\n          if (!rtn) return cb(null)\n          let classifier = new this.$cv.CascadeClassifier()\n          rtn = classifier.load(file)\n          if (!rtn) return cb(null)\n\n          cb(classifier)\n          console.log('loaded', rtn, classifier.empty(), this.faceClass)\n\n        })\n        .catch((err) => {\n          console.log('ERR', err);\n        })\n    }\n  },\n  beforeDestroy() {\n    this.stopCamera();\n  }\n}\n</script>\n\n<style scoped>\n.imgcanvas {\n  width: 400px;\n  height: 300px;\n  border: 2px solid #000;\n  margin: 10px;\n}\n</style>\n"]}]}